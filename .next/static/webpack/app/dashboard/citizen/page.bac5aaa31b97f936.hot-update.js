"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/citizen/page",{

/***/ "(app-pages-browser)/./src/lib/api-client.ts":
/*!*******************************!*\
  !*** ./src/lib/api-client.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClient: () => (/* binding */ apiClient)\n/* harmony export */ });\nclass APIClient {\n    getAuthHeaders() {\n        const token = localStorage.getItem('civiclink_token');\n        return token ? {\n            Authorization: \"Bearer \".concat(token)\n        } : {};\n    }\n    async request(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const url = \"\".concat(this.baseURL).concat(endpoint);\n        const config = {\n            ...options,\n            headers: {\n                ...this.getAuthHeaders(),\n                ...options.headers\n            }\n        };\n        // Only set Content-Type for non-FormData requests\n        if (!(options.body instanceof FormData)) {\n            config.headers = {\n                'Content-Type': 'application/json',\n                ...config.headers\n            };\n        }\n        try {\n            const response = await fetch(url, config);\n            const data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.error || \"HTTP error! status: \".concat(response.status));\n            }\n            return data;\n        } catch (error) {\n            console.error(\"API request failed for \".concat(endpoint, \":\"), error);\n            throw error;\n        }\n    }\n    constructor(){\n        var _this = this;\n        this.baseURL = '/api';\n        // Authentication methods\n        this.auth = {\n            login: (email, password)=>this.request('/auth/login', {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        email,\n                        password\n                    })\n                }),\n            register: (userData)=>this.request('/auth/register', {\n                    method: 'POST',\n                    body: JSON.stringify(userData)\n                }),\n            getMe: ()=>this.request('/auth/me')\n        };\n        // Issues methods\n        this.issues = {\n            getAll: function() {\n                let params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n                const queryString = new URLSearchParams(params).toString();\n                return _this.request(\"/issues\".concat(queryString ? \"?\".concat(queryString) : ''));\n            },\n            getById: (id)=>this.request(\"/issues/\".concat(id)),\n            create: (issueData)=>this.request('/issues', {\n                    method: 'POST',\n                    body: issueData instanceof FormData ? issueData : JSON.stringify(issueData)\n                }),\n            update: (id, updateData)=>this.request(\"/issues/\".concat(id), {\n                    method: 'PATCH',\n                    body: JSON.stringify(updateData)\n                }),\n            addFeedback: (id, feedback)=>this.request(\"/issues/\".concat(id, \"/feedback\"), {\n                    method: 'POST',\n                    body: JSON.stringify(feedback)\n                })\n        };\n        // Departments methods\n        this.departments = {\n            getAll: ()=>this.request('/departments'),\n            getById: (id)=>this.request(\"/departments/\".concat(id))\n        };\n        // Users methods\n        this.users = {\n            getAll: function() {\n                let params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n                const queryString = new URLSearchParams(params).toString();\n                return _this.request(\"/users\".concat(queryString ? \"?\".concat(queryString) : ''));\n            },\n            getById: (id)=>this.request(\"/users/\".concat(id)),\n            update: (id, userData)=>this.request(\"/users/\".concat(id), {\n                    method: 'PATCH',\n                    body: JSON.stringify(userData)\n                })\n        };\n        // Analytics methods\n        this.analytics = {\n            getDashboardStats: ()=>this.request('/analytics/dashboard'),\n            getIssueStats: function() {\n                let params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n                const queryString = new URLSearchParams(params).toString();\n                return _this.request(\"/analytics/issues\".concat(queryString ? \"?\".concat(queryString) : ''));\n            }\n        };\n    }\n}\nconst apiClient = new APIClient();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api-client.ts\n"));

/***/ })

});